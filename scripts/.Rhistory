# load packages
library(tidyverse)
library(emmeans)
library(lme4)
library(car)
library(circular)
library(multcompView)
library(ggthemes)
library(agricolae)
library(patchwork)
# function to get pairwise letters from Tukey's HSD for boxplots
letters <- function(df = data, x = "Site", dfy, y){
.checkvar <- sym(y) #convert string to variable
.groupvar <- sym(x) #convert string to variable
# find highest value of y data
abs_max <- max(dfy, na.rm = TRUE)
# get the highest point for each species
max_y <- df %>% dplyr::group_by(!! .groupvar) %>%
dplyr::summarise(yaxis = max(!! .checkvar, na.rm = TRUE) + 0.05 * abs_max)
#"!!" unquotes the variable to allow for evaluation within dplyr
# get Tukey HSD results
hsd <- HSD.test(aov(as.formula(paste(y, x, sep = "~")), df), x, group = TRUE)
# add Tukey HSD results to dataframe containing graphing positions
max_y$group <- hsd$groups$groups
return(max_y)
}
# function to get pairwise letters from Tukey's HSD with a transformed y variable for boxplots
letters_adj <- function(df = data, x = "Site", dfy, y, adjy){
.checkvar <- sym(y)
.groupvar <- sym(x)
abs_max <- max(dfy, na.rm = TRUE)
max_y <- df %>% dplyr::group_by(!! .groupvar) %>%
dplyr::summarise(yaxis = max(!! .checkvar, na.rm = TRUE) + 0.05 * abs_max)
hsd <- HSD.test(aov(as.formula(paste(adjy, x, sep = "~")), df), x, group = TRUE)
max_y$group <- hsd$groups$groups
return(max_y)
}
#### read in cleaned data ####
data <- read.csv('../data/mtDesertIsland_data.csv')
data$CN_foliar <- data$C_foliar/data$N_foliar
data$CN_soil <- data$C_soil/data$N_soil
data_density <- read.csv('../data/mtDesertIsland_stand_density.csv')
data <- read.csv('../data/mtDesertIsland_data.csv')
data_density <- read.csv('../data/mtDesertIsland_standdensity.csv')
colnames(data_density)[1] <- "Name" #rename to match data
## assign fire history status to each site
data$fire[data$Name == 'CAD'] <- 'fire'
data$fire[data$Name == 'CADCLIFFS'] <- 'fire'
data$fire[data$Name == 'STSAUV'] <- 'no fire'
data$fire[data$Name == 'WOND'] <- 'no fire'
data_density$fire[data_density$Name == 'CAD'] <- 'fire'
data_density$fire[data_density$Name == 'CADCLIFFS'] <- 'fire'
data_density$fire[data_density$Name == 'STSAUV'] <- 'no fire'
data_density$fire[data_density$Name == 'WOND'] <- 'no fire'
## create an elevation factor
data$elevation_fac[data$Name == 'CAD' | data$Name == 'STSAUV'] <- 'high'
data$elevation_fac[data$Name == 'CADCLIFFS' | data$Name == 'WOND'] <- 'low'
data_density$elevation_fac[data_density$Name == 'CAD' | data_density$Name == 'STSAUV'] <- 'high'
data_density$elevation_fac[data_density$Name == 'CADCLIFFS' | data_density$Name == 'WOND'] <- 'low'
## reorder levels for elevation factor from "low" to "high"
data$elevation_fac <- factor(data$elevation_fac, levels = c("low", "high"))
data_density$elevation_fac <- factor(data_density$elevation_fac, levels = c("low", "high"))
## rename site labels to match manuscript
data$Site[data$Name == "CAD"] <- "SCT"
data$Site[data$Name == "CADCLIFFS"] <- "GOR"
data$Site[data$Name == "STSAUV"] <- "STS"
data$Site[data$Name == "WOND"] <- "WON"
data_density$Site[data_density$Name == "CAD"] <- "SCT"
data_density$Site[data_density$Name == "CADCLIFFS"] <- "GOR"
data_density$Site[data_density$Name == "STSAUV"] <- "STS"
data_density$Site[data_density$Name == "WOND"] <- "WON"
## reorder levels of sites to match to increase from low to high elevation and no fire to fire
data$Site <- factor(data$Site, levels = c("WON", "GOR", "STS", "SCT"))
data_density$Site <- factor(data_density$Site, levels = c("WON", "GOR", "STS", "SCT"))
## create a generic variable set to pass to formula argument
ind_variables <- c('elevation_fac', 'fire')
dep_variables <- c("log(Elevation)", "log(Height)", "log(Canopy)", "log(Diam)",
"d13C", "d15N", "C_foliar", "N_foliar", "CN_foliar", "Ca_foliar", "log(P_foliar)",
"log(K_foliar)", "Mg_foliar", "Al_foliar", "log(Zn_foliar)",
"Ca_soil", "log(P_soil)", "K_soil", "Mg_soil", "log(Al_soil)", "log(Zn_soil)",
"pH", "CEC", "C_soil", "N_soil", "log(CN_soil)", "asin(sqrt(0.01 * Retention))")
## topography
### elevation
Elevation_lm <- lm(as.formula(paste("log(Elevation)",
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(Elevation_lm) ~ fitted(Elevation_lm))
Anova(Elevation_lm)
cld.emmGrid(emmeans(Elevation_lm, ~elevation_fac * fire))
ggplot(data = data, aes(x = Site, y = log(Elevation))) +
geom_boxplot()
### slope
Slope_lm <- lm(as.formula(paste("Slope",
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(Slope_lm) ~ fitted(Slope_lm))
Anova(Slope_lm)
cld.emmGrid(emmeans(Slope_lm, ~elevation_fac * fire))
ggplot(data = data, aes(x = Site, y = Slope)) +
geom_boxplot()
### aspect
#### turn aspect data into circular data that maps onto a compass
aspect_SCT <- circular(data$Aspect[data$Name == 'CAD'],
units = "degrees", template = "geographics")
aspect_GOR <- circular(data$Aspect[data$Name == 'CADCLIFFS'],
units = "degrees", template = "geographics")
aspect_STS <- circular(data$Aspect[data$Name == 'STSAUV'],
units = "degrees", template = "geographics")
aspect_WON <- circular(data$Aspect[data$Name == 'WOND'],
units = "degrees", template = "geographics")
#### Watson's Two Sample Test of Homogeneity (https://bigdata.duke.edu/sites/bigdata.duke.edu/files/site-images/FullLesson.html)
#### tests whether the ‘north’ and ‘south’ groups orient in different directions
watson.two.test(aspect_WON, aspect_GOR) # 0.01 < P < 0.05
watson.two.test(aspect_WON, aspect_STS) # 0.001 < P < 0.01
watson.two.test(aspect_WON, aspect_SCT) # 0.01 < P < 0.05
watson.two.test(aspect_GOR, aspect_STS) # 0.001 < P < 0.01
watson.two.test(aspect_GOR, aspect_SCT) # 0.05 < P < 0.1
watson.two.test(aspect_STS, aspect_SCT) # P < 0.001
#### circular plots for each site
plot_aspect_CADCLIFFS <- plot.circular(aspect_CADCLIFFS, main = 'Gorham Cliffs (a)',
ylab = "Fire",
cex = 8, col = "red", pch = 16)
plot_aspect_CAD <- plot.circular(aspect_CAD, main = 'South Cadillac (a)',
cex = 8, col = "red", pch = 17)
plot_aspect_WOND <- plot.circular(aspect_WOND, main = 'Wonderland (b)',
ylab = "No Fire", xlab = "Low Elevation",
cex = 8, col = "blue", pch = 16)
plot_aspect_STSAUV <- plot.circular(aspect_STSAUV, main = 'St. Sauveur (c)',
xlab = "High Elevation",
cex = 8, col = "blue", pch = 17)
## allometry
### height
height_lm <- lm(as.formula(paste(dep_variables[2],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#### circular plots for each site
plot_aspect_CADCLIFFS <- plot.circular(aspect_GOR, main = 'Gorham Cliffs (a)',
ylab = "Fire",
cex = 8, col = "red", pch = 16)
plot_aspect_CAD <- plot.circular(aspect_SCT, main = 'South Cadillac (a)',
cex = 8, col = "red", pch = 17)
plot_aspect_WOND <- plot.circular(aspect_WON, main = 'Wonderland (b)',
ylab = "No Fire", xlab = "Low Elevation",
cex = 8, col = "blue", pch = 16)
plot_aspect_STSAUV <- plot.circular(aspect_STS, main = 'St. Sauveur (c)',
xlab = "High Elevation",
cex = 8, col = "blue", pch = 17)
## allometry
### height
height_lm <- lm(as.formula(paste(dep_variables[2],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(height_lm) ~ fitted(height_lm))
Anova(height_lm)
cld.emmGrid(emmeans(height_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
height_letters <- letters_adj(dfy = data$Height, y = "Height", adjy = "log(Height)")
(plot_height <- ggplot(data = data, aes(x = Site, y = Height)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = height_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "Height (m)") +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### canopy
canopy_lm <- lm(as.formula(paste(dep_variables[3],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
# plot(resid(canopy_lm) ~ fitted(canopy_lm))
anova(canopy_lm)
cld.emmGrid(emmeans(canopy_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
canopy_letters <- letters_adj(dfy = data$Canopy, y = "Canopy", adjy = "log(Canopy)")
(plot_canopy <- ggplot(data = data, aes(x = Site, y = Canopy)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = canopy_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "Canopy Spread (m)") +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### diam
diam_lm <- lm(as.formula(paste(dep_variables[4],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(diam_lm) ~ fitted(diam_lm))
anova(diam_lm)
cld.emmGrid(emmeans(diam_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
diam_letters <- letters_adj(dfy = data$Diam, y = "Diam", adjy = "log(Diam)")
(plot_diam <- ggplot(data = data, aes(x = Site, y = Diam)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = diam_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "DBH (cm)") +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### density
density_lm <- lm(mean_distance ~ elevation_fac * fire, data = data_density)
#plot(resid(density_lm) ~ fitted(density_lm))
anova(density_lm)
cld.emmGrid(emmeans(density_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
density_letters <- letters(df = data_density, dfy = data_density$mean_distance, y = "mean_distance")
(plot_density <- ggplot(data = data_density, aes(x = Site, y = mean_distance)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = density_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "Stand Density (m)") +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
(plots_allometry <- plot_height + plot_canopy + plot_diam + plot_density +
plot_layout(guides = 'collect') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 16)))
## foliar organics
### C_foliar
C_foliar_lm <- lm(as.formula(paste(dep_variables[7],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(C_foliar_lm) ~ fitted(C_foliar_lm))
anova(C_foliar_lm)
cld.emmGrid(emmeans(C_foliar_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
C_foliar_letters <- letters(dfy = data$C_foliar, y = "C_foliar")
(plot_C_foliar <- ggplot(data = data, aes(x = Site, y = C_foliar)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = C_foliar_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "Foliar Carbon (%)") +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### N_foliar
N_foliar_lm <- lm(as.formula(paste(dep_variables[8],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(N_foliar_lm) ~ fitted(N_foliar_lm))
anova(N_foliar_lm)
cld.emmGrid(emmeans(N_foliar_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
N_foliar_letters <- letters(dfy = data$N_foliar, y = "N_foliar")
(plot_N_foliar <- ggplot(data = data, aes(x = Site, y = N_foliar)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = N_foliar_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "Foliar Nitrogen (%)") +
# theme(legend.position = "bottom", legend.title = element_text(size = 16),
#       legend.text = element_text(size = 12)) +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### CN_foliar
CN_foliar_lm <- lm(as.formula(paste(dep_variables[9],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(CN_foliar_lm) ~ fitted(CN_foliar_lm))
anova(CN_foliar_lm)
cld.emmGrid(emmeans(CN_foliar_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
CN_foliar_letters <- letters(dfy = data$CN_foliar, y = "CN_foliar")
(plot_CN_foliar <- ggplot(data = data, aes(x = Site, y = CN_foliar)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = CN_foliar_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
scale_y_continuous(name = "Foliar Carbon/Nitrogen") +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
(plots_foliar_organics <- plot_C_foliar + plot_N_foliar + plot_CN_foliar +
plot_layout(guides = 'collect') +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 16)))
## foliar inorganics
### Ca_foliar
Ca_foliar_lm <- lm(as.formula(paste(dep_variables[10],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(Ca_foliar_lm) ~ fitted(Ca_foliar_lm))
anova(Ca_foliar_lm)
cld.emmGrid(emmeans(Ca_foliar_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
Ca_foliar_letters <- letters(dfy = data$Ca_foliar, y = "Ca_foliar")
(plot_Ca_foliar <- ggplot(data = data, aes(x = Site, y = Ca_foliar)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = Ca_foliar_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
ylab(expression("Foliar Calcium (g g"^{-1}*")")) +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### P_foliar
P_foliar_lm <- lm(as.formula(paste(dep_variables[11],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(P_foliar_lm) ~ fitted(P_foliar_lm))
anova(P_foliar_lm)
cld.emmGrid(emmeans(P_foliar_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
P_foliar_letters <- letters_adj(dfy = data$P_foliar, y = "P_foliar", adjy = "log(P_foliar)")
(plot_P_foliar <- ggplot(data = data, aes(x = Site, y = P_foliar)) +
geom_rect(data = NULL, aes(xmin = 0, xmax = 2.5, ymin = -Inf, ymax = Inf),
fill = "grey") +
geom_jitter(height = 0, aes(color = fire, shape = elevation_fac), size = 2) +
scale_color_manual(values = c('red', 'blue')) +
geom_boxplot(outlier.color = NA, fill = NA) +
geom_text(data = P_foliar_letters, aes(y = yaxis, label = group)) +
theme_few(base_size = 16) +
scale_x_discrete(name = "Site") +
ylab(expression("Foliar Phosphorus (g g"^{-1}*")")) +
guides(color = guide_legend("Fire History")) +
guides(shape = guide_legend("Elevation")))
### K_foliar
K_foliar_lm <- lm(as.formula(paste(dep_variables[12],
paste(ind_variables, collapse = "*"),
sep = "~")), data = data)
#plot(resid(K_foliar_lm) ~ fitted(K_foliar_lm))
anova(K_foliar_lm)
cld.emmGrid(emmeans(K_foliar_lm, ~elevation_fac * fire))
#### get pairwise letters for boxplot
K_foliar_letters <- letters_adj(dfy = data$K_foliar, y = "K_foliar", adjy = "log(K_foliar)")
